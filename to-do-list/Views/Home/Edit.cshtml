@model TaskModel

@{ Layout = "_Layout";}

<p id="pageTitle" class="page-title" data-bind="text:name"></p>

<form id="editTaskForm" class="m-1 p-1" onload="displayDeadline();" action="../api/EditTask" method="post" enctype="multipart/form-data">
    <input id="taskId" name="taskId" type="hidden" data-bind="value:taskId" />
    <input id="projectId" name="projectId" type="hidden" data-bind="value:projectId" />
    <input type="hidden" data-bind="value:priority" />

    <div class="form-group">
        <label>Task Name</label>
        <input name="name" data-bind="value:name" placeholder="Task name is required..." class="form-control" required />
    </div>

    <div class="form-group">
        <label>Description</label>
        <textarea style="height:75px;" name="description" data-bind="textInput:description" class="form-control"></textarea>
    </div>

    <div class="form-group">
        <label>Images</label>

        <p data-bind="if:images!=null">
            <div data-bind="foreach:images">
                <span id="key">
                    <img data-bind="attr:{src:value}" style="width:213px; height:225px" />
                    <a role="button" tabindex="0" data-bind="click:$parent.removeImage.bind($data)"><i class="fas fa-times-circle"></i></a>
                </span>
            </div>
        </p>

        <input id="imageInput" name="images" type="file" multiple />
    </div>

    <div data-bind="if:taskId!=0" id="statusGroup" class="form-group">
        <label>Status</label>
        <select onchange="checkTaskStatus()" id="statusInput" class="form-control" name="status" data-bind="value:status">
            <option disabled selected value="">Select Status of Task</option>
            <option value="Active">Active</option>
            <option value="Review">For Review</option>
            <option value="Closed">Closed</option>
        </select>
    </div>

    <div data-bind="if:status!='Closed'" id="taskList" class="form-group">
        <label>List Type</label>
        <select id="taskListInput" class="form-control" name="listType" data-bind="value:listType">
            <option disabled selected value="">Select List to be Added to</option>
            <option value="Next">Next</option>
            <option value="Backlog">Backlog</option>
        </select>
    </div>

    <div class="form-group">
        <label>Deadline</label>
        <div>
            <button class="btn btn-black" role="button" type="button" id="addDeadlineButton" onclick="addDeadline()" data-bind="ifnot:deadline">Add Deadline</button>
        </div>
        <div id="deadlineInputDiv" data-bind="if:deadline">
            <input type="date" style="width:auto;" id="deadlineInput" name="deadline" class="form-control" data-bind="value:deadline" />
            <button role="button" class="btn btn-black" type="button" data-bind="click: removeDeadline">Remove Deadline</button>
        </div>
    </div>

    <div data-bind="if:taskId!=0" id="subTasks">
        Subtasks:
        <table id="subTasksTable" class="table table-striped table-sm">
            <tbody id="sortable" data-bind="foreach:subtasks">
                <tr>
                    <td class="name"><a data-bind="text:name,attr:{href:'./EditSubTask?subtaskid='+ subtaskId}"></a></td>
                    <td class="text-center" data-bind="text:'Status: '+status"></td>
                    <td class="text-right">
                        <a data-bind="attr:{href:'./EditSubTask?SubTaskId='+ subtaskId}" class="btn btn-sm" onclick="return confirmation()"><i class="fas fa-check"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>
            <a title="Add Subtask" data-bind="attr:{href:'./CreateSubTask?taskId=' + taskVM().taskId()}" class="btn btn-black"><i class="fas fa-plus"></i> Add</a>
        </p>
    </div>

    <div class="form-group">
        <label>Comments</label>
        <textarea style="height:75px;" name="taskComments" data-bind="textInput:comments" class="form-control"></textarea>
    </div>
</form>

<div style="margin-bottom:5px; float:right;">
    <button role="button" onclick="saveTask()" class="btn btn-black">Save</button>
    <a data-bind="attr:{href:'./Tasks?projectId=' + taskVM().projectId() + '&listType=' + taskVM().listType()}">Cancel</a>
</div>

<script>
    async function saveTask() {
        if (taskVM.isValid()) {
            saveChanges("editTaskForm").then(() => {
                window.location.replace(window.location.origin + '/Home/Tasks?projectId=' + taskVM().projectId() + '&listType=' + taskVM().listType());
            });
        } else {
            toastr.remove();
            toastr.error("Form is invalid");
            taskVM().errors.showAllMessages()
            $("#editTaskForm")[0].classList.add("dirty");
        }
    }

    ko.validation.configure({
        parseInputAttributes: true,
        registerExtenders: true
    });

    var taskVM = ko.validatedObservable({
        dataLoaded: ko.observable(),
        taskId: ko.observable(),
        projectId: ko.observable(),
        priority: ko.observable(),
        name: ko.observable('').extend({ required: true }),
        description: ko.observable(''),
        images: ko.observable(),
        status: ko.observable('').extend({ required: true }),
        listType: ko.observable(''),
        deadline: ko.observable(''),
        subtasks: ko.observable(),
        comments: ko.observable(''),

        load: function () {
            $.ajax({
                url: window.location.origin + '/api/EditTask/' + taskVM().taskId(),
                type: "get",
                success: function (result) {
                    taskVM().dataLoaded(true);
                    taskVM().taskId(result.taskId);
                    taskVM().projectId(result.projectId);
                    taskVM().priority(result.priority);
                    taskVM().name(result.name);
                    taskVM().description(result.description);
                    taskVM().images(result.images);
                    taskVM().status(result.status);
                    taskVM().listType(result.listType);
                    taskVM().deadline(result.deadline);
                    taskVM().subtasks(result.subtasks);
                    taskVM().comments(result.comments);

                    if (taskVM().status() == "") {
                        taskVM().status("Active");
                    }
                }
            });
        }
    });

    $(function () {
        var url = new URLSearchParams(window.location.search);
        var taskId = url.get("taskid") || 0;
        var projectId = url.get("projectId") || 0;
        var fromAction = url.get("fromAction") || 0;

        $.ajax({
            url: window.location.origin + '/api/EditTask/' + taskId + '?projectId=' + projectId + '&fromAction=' + fromAction,
            type: "get",
            success: function (result) {
                taskVM().dataLoaded(true);
                taskVM().taskId(result.taskId);
                taskVM().projectId(result.projectId);
                taskVM().priority(result.priority);
                taskVM().name(result.name);
                taskVM().description(result.description);
                taskVM().images(result.images);
                taskVM().status(result.status);
                taskVM().listType(result.listType);
                taskVM().deadline(result.deadline);
                taskVM().subtasks(result.subtasks);
                taskVM().comments(result.comments);

                ko.applyBindings(taskVM, $("body")[0]);
                taskVM().errors.showAllMessages(false);

                $("#editTaskForm").areYouSure();

                if (taskVM().name() == null) {
                    $("#pageTitle").html("New Task");
                    $(".breadcrumb-item:last").html("New Task");
                } else {
                    $("#pageTitle").html(taskVM().name());
                    $(".breadcrumb-item:last").html(taskVM().name());
                }
            }
        });

        removeImage = function (e) {
            imageId = $(e.parentElement).attr('id');
            $.ajax({
                url: "/api/image",
                method: "put",
                dataType: "application/json",
                data: { imageId: imageId }
            });
            console.log(imageId);
            $("#" + imageId).css("display", "none");
        };

        if (taskVM().taskId() == 0) {
            $("#statusInput").val("Active");
        }
    });

    function addDeadline() {
        var dateToday = new Date();
        var dateNextWeek = new Date(dateToday.setDate(dateToday.getDate() + 7));
        taskVM().deadline(dateNextWeek.toJSON().slice(0, 10));
        $("#addDeadlineButton").css("display", "none");
        $("#deadlineInputDiv").css("display", "block");
        $("#deadlineInput").val(taskVM().deadline());
    }

    function removeDeadline() {
        taskVM().deadline(null);
        $("#addDeadlineButton").css("display", "block");
        $("#deadlineInputDiv").css("display", "none");
        $("#deadlineInput").val("");
    }

    function checkTaskStatus() {
        if ($("#statusInput").val() != "Closed") {
            $("#taskList").css("display", "block");
        } else {
            $("#taskList").css("display", "none");
            $("#taskListInput").val("");
        }
    }
</script>